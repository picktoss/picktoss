#!/usr/bin/env node

const fs = require("fs")
const path = require("path")

/**
 * Generates React components for each PNG file in the specified directory.
 * Usage: `node generate-image-components.js`
 */

// 1. PNG 파일이 들어있는 폴더 경로 설정
const imagesDir = path.join(__dirname, "../../assets/image")

// 2. 최종적으로 생성할 index.ts 파일 경로
const indexFilePath = path.join(imagesDir, "index.tsx")

/**
 * 문자열을 PascalCase로 변환해주는 함수
 * 예) "img_bookmark" -> "ImgBookmark"
 */
function toPascalCase(str) {
  return str
    .split(/[-_]/)
    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1).toLowerCase())
    .join("")
}

/**
 * PNG 파일들을 스캔하여, 각 파일을 import 없이 바로 React 컴포넌트 형태로 export하는
 * index.tsx 파일을 생성해주는 메인 함수
 */
function generateImageComponents() {
  // (1) image 폴더가 존재하는지 확인
  if (!fs.existsSync(imagesDir)) {
    console.error(`Directory not found: ${imagesDir}`)
    process.exit(1)
  }

  // (2) image 폴더 내 .png 파일만 필터링
  const pngFiles = fs.readdirSync(imagesDir).filter((file) => {
    const filePath = path.join(imagesDir, file)
    return fs.lstatSync(filePath).isFile() && path.extname(file).toLowerCase() === ".png"
  })

  // (3) 만약 .png 파일이 하나도 없다면 경고 후 종료
  if (pngFiles.length === 0) {
    console.warn(`No PNG files found in directory: ${imagesDir}`)
    process.exit(0)
  }

  // (4) index.tsx 내용의 시작 부분
  let content = `// This file is auto-generated by generate-image-components.js.
// Do not edit manually.\n\n`

  // (5) 각 png 파일을 순회하며 컴포넌트 문자열을 생성
  pngFiles.forEach((file) => {
    // 예: file = "img_bookmark.png"
    const baseName = path.basename(file, ".png") // "img_bookmark"
    const componentName = toPascalCase(baseName) // "ImgBookmark"

    // alt 텍스트는 관례상 img_ 접두어를 제거하거나, 필요에 맞춰 수정 가능
    const altText = baseName.replace(/^img_/, "") // "bookmark"

    content += `export const ${componentName} = ({ ...props }) => {
  return <img src="./${file}" alt="${altText}" {...props} />;
};

`
  })

  // (6) 최종적으로 생성된 content를 index.tsx 파일로 저장
  fs.writeFileSync(indexFilePath, content, "utf8")

  console.log(`Successfully generated ${indexFilePath} with ${pngFiles.length} components.`)
}

// (7) 스크립트 실행
generateImageComponents()
